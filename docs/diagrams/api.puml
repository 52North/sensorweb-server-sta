@startuml SensorThings API, API

title STA Architecture (commit 547fdd)

node "User" as sta {
}

package "http" {

    class ReadController {
    }

    class WriteController {
    }

    package "serializer" as pkg_serializer {
        interface "Serializer" as serializer
        interface "Deserializer" as deserializer
    }

}
package "api" {

    interface "EntityService"
    interface "DomainService"

    package "aggregate" as pkg_aggregate {
        interface EntityAggregate
        note right of EntityAggregate {
            validates integrity of
            entity against STA
            integrity constraints
        }
    }

    package "rules" as pkg_rules {
        interface DomainRule
        note right of DomainRule {
            applies business logic
            to request. May forbid
            or modify request before
            further processing
        }
    }

    package "event" as pkg_event {
        interface DomainEvent
        note right of DomainEvent {
            encapsulates event for
            later processing
        }
        interface DomainEventHandler
    }

    interface "EntityEditor" as entity_editor
    ' note left of entity_editor {
    '     Orchestrates read access
    ' }

    interface "EntityProvider" as entity_provider
    ' note right of entity_provider {
    '     Orchestrates write access
    ' }

}

node "spring" {
    interface "JpaRepository" as jpa_repo
    interface "JpaSpecificationExecutor" as jpa_spec_executor
}


node "data-provider-hibernate" {

    interface "BaseRepository" as base_repository

    class "BaseRepositoryImpl" as base_repository_impl
    note right of base_repository_impl {
        Provides custom
        implementations
        of JPA interface
        methods
    }
    ' package "repository" {
        ' interface "<<Entity>>Repository"  as entity_repo
        ' interface "ProcedureRepository" as procedure_repo
        ' interface "ThingRepository" as thing_repo
        ' interface "SensorRepository" as sensor_repo
    ' }

    package repositories as pkg_repositories {
        class EntityRepository  extends base_repository_impl implements base_repository, jpa_repo, jpa_spec_executor
        note right of EntityRepository {
            entity-specific
        }
    }
}

database Database as db {
}

sta ..> WriteController : //creates/updates/deletes//
sta ..> ReadController : //reads//


WriteController --> "DomainService"
ReadController --> "DomainService"

DomainService ..> DomainRule : // 1. validate rule //
DomainService ..> DomainEvent : // 2. generate event //
DomainService ..> EntityService : // 3. forward request //

EntityService --> entity_editor : //delegates//
EntityService --> entity_provider : //delegates//

entity_provider --|> base_repository
entity_editor --|> base_repository

EntityRepository --> db

EntityService --> EntityAggregate

@enduml
