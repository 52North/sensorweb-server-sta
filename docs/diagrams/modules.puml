@startuml SensorThings API, Modules and Dependencies

title STA Packages (commit 547fdd)

node app
note left of app {
  Bootstrapping and configuration.
}

node sta <<infrastructure layer>> {
    package http
    package mqtt
}
note left of sta {
  OGC REST interface.
  
  Controllers validating requests and 
  topics delegating to services. Payload
  de-/serialization. Converting to
  Web Exceptions.
}

app --> http
app --> mqtt

node api <<application layer>> {
    package domain {
        package domain.aggregate
        note right of domain.aggregate {
            Aggregates over Entities validating
            Integrity Constraints
        }
        package domain.event
        note right of domain.event {
            Events generated by Business Logic
        }
        package rules as domain.rules
        note right of domain.rules {
            Rules to be enforced by Business Logic
        }
        package service as domain.service
        note right of domain.service {
            Domain Services applying
            Business Logic to Requests
        }

    }
    package entity
    note right of entity {
        Abstract Interfaces for all STA Entities
    }
    package path
    note right of path {
        Utility for transferring Requests
    }
    package service
    note right of service {
        Services providing CRUD Operations on Entities
    }
}

note top of api
    STA application layer.

    Defines an SPI to call data storage
    specific logic. Verfies consistency.
    Handles or delegates exceptions and
    holds additional features.
end note

together {
    node data_provider_hibernate <<infrastructure layer>>
}
note left of data_provider_hibernate
    Persistence provider using Hibernate.
end note

mqtt --> api
http --> api

domain.service --> service
domain.service --> domain.rules
domain.service --> domain.event

service --> domain.aggregate

service --> data_provider_hibernate

@enduml
