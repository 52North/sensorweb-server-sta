# Log Bean initiation process
debug: false
trace: false

# General Server Configuration
server:
  port: 8081

  ## Used for response serialization + url parsing. Must be set correctly!
  rootUrl: "http://localhost:8081/v1.1/"
  servlet:
    context-path: "/v1.1"
    encoding:
      enabled: true
      charset: UTF-8
      force: true

  ## Used for enabling/disabling custom 52N-STA Features
  feature:

    # Controls whether Ids are escaped with single quotes e.g. Things('testThing')/Datastreams. Defaults to true if not given
    # Note: This only controls inbound requests. navigationLinks+selfLinks are returned without single quotes always
    # Note: This is currently not affecting MQTT Processing
    escapeId: true

    # Controls whether properties referenced from $expand need to be explicitly referenced from $select if $select is used or are implicitly included
    # Resolves ambiguity as discussed in https://github.com/opengeospatial/sensorthings/issues/106
    # Defaults to false.
    implicitExpand: false

    ## Automatically updates a FeatureOfInterest linked in Thing->properties under
    ## key "updateFOI" with new Locations of the Thing
    updateFOI: false

    ## Defines all Collections that accept POSTing via MQTT.
    ## Default (defined by standard): "Observations" only
    mqttPublishTopics: Observations

    ## Toggle strict checking of encodingType for Sensor Entity
    ## When true Sensor->encodingType is not validated against allowed encodingTypes defined in the Standard
    ## (currently PDF and SensorML2)
    ## Note: This only influences encodingType when SensorEntity is posted/patched directly, not when it is inserted via nested insertion inside a Datastream
    variableEncodingType: false

    # Toggle whether information about SOS-specific Dataset->Category should be mapped to Datastream->properties->category
    includeDatastreamCategory: false

    ## Defines if/how Observation->Parameters should be parsed and handled. Enabled by default, empty String disables the key.
    observation:
      # Key that holds information about the samplingGeometry
      samplingGeometry: http://www.opengis.net/def/param-name/OGC-OM/2.0/samplingGeometry
      # Key that holds information about the lower limit of the vertical extend of the observation (e.g. depth under water).
      verticalFrom: verticalFrom
      # Key that holds information about the upper limit of the the vertical extend of the observation (e.g. depth under water).
      verticalTo: verticalTo
      # Key that holds information about the vertical extend of the observation (e.g. depth under water).
      # Uses the same value for upper and lower limit.
      verticalFromTo: vertical

    ## Toggle support for isMobile Feature
    ## When true DatasetType is set to trajectory if Thing->property contains KVP '"isMobile": "true"'
    isMobile: false

    # Toggle whether this Instance should be read-only. Can be toggled separately for MQTT and HTTP
    # All MQTT Publish Messages will be dropped silently
    mqttReadOnly: false
    # All HTTP POST & PUT Requests will be dropped with a HTTP Status 405 NOT Allowed
    httpReadOnly: false

  # Used for communicating with the UFZ Aggregata API
  security:
    aggregataToken: "******************"

# Database Configuration
database:
  jpa:
    # Mappings to be loaded. See https://github.com/52North/sensorweb-server-sta/wiki for details
    # Options:
    # - Vanilla STA: sta-vanilla.xml
    persistence-location: classpath:META-INF/sta-citsci.xml
spring:
  # Profile of the application.
  # Options:
  # - Vanilla STA: vanilla
  # - UFZ Aggregata backend: ufzaggregata
  # - STA Plus (CitSci Extension): citSci
  # - [not implemented yet] STA with MultiDatastream Extension: multiDatastreamExtension
  profiles:
    active: citSci
  datasource:
    platform: postgres
    username: postgres
    password: postgres
    url: jdbc:postgresql://localhost:5000/sta
    initialization-mode: always
    hikari:
      maximum-pool-size: 10
  jpa:
    openInView: false
    properties:
      hibernate:
        hbm2ddl:
          # hbm2ddl values: validate | update | create | create-drop | none
          auto: validate
        jdbc:
          time_zone: UTC
          # https://hibernate.atlassian.net/browse/HHH-12368
          lob.non_contextual_creation: true
        default_schema: test
        dialect: org.hibernate.spatial.dialect.postgis.PostgisPG95Dialect
        # disable driver's feature detection
        # see https://stackoverflow.com/questions/46493500/hibernate-with-c3p0-createclob-is-not-yet-implemented
        temp.use_jdbc_metadata_defaults: false

        show_sql: true
        format_sql: true
        use_sql_comments: false
  jmx:
    enabled: false

  mvc:
    servlet:
      path: /

# HTTP Configuration
http:
  cors:
    allowOrigin: "*"
    allowMethods: "POST, PUT, GET, OPTIONS, DELETE, PATCH"
    allowHeaders: "Access-Control-Allow-Headers, Content-Type, Authorization, X-Requested-With"
    maxAge: 3600

# MQTT Configuration
mqtt:
  broker:
    plaintcp:
      enabled: true
      host: "mqtt://localhost"
      port: 1883
    websocket:
      enabled: true
      host: "ws://localhost"
      port: 8883
    persistence:
      enabled: false
      path: "" # Empty for default path (java "user.dir")
      filename: "52N-STA-MQTTBroker.h2"
      autosave_interval: "30"

# Logging
logging:
  level:
    root: INFO
    #    org.postgresql.core: TRACE
    #    com.zaxxer.hikari: TRACE

    #    org.opengis.cite: TRACE
    #    org.apache.coyote.http11.Http11InputBuffer: TRACE
    #    org.hibernate: INFO
    #    org.hibernate.type: INFO
    #    org.hibernate: TRACE
    #    io.moquette: TRACE
    org.n52: TRACE
#    org.springframework.orm.jpa: TRACE
#    org.springframework.web: DEBUG

